#include <iostream>
#include <limits>
#include<climits>
#include <string>
#include <iostream>
#include <cstdlib>
#include <ctime>

using namespace std;


int base_calculation(string str);  

string generateRandomHexadecimal(int length) ;  


bool is_input_hexadecimal(string str); 
void input(string* arr, int size_of_array);  
void print(string* arr, int size_of_array); 


int main()  
{
int size_of_array;
    cout << "Input the quantity of hexadecimal number to find the frequency of base : " << endl;
        cin >> size_of_array;

string* arr = new string[size_of_array]; 

cout<<"1)USER-INPUT"<<endl;
cout<<"2)Randomly generated hexadecimal values "<<endl;
    int choice;
        cout<<"Enter your choice : ";
        cin>>choice;

    if(choice == 1)
    {
        cout << "Enter the " <<size_of_array <<" hexadecimal values: " << endl;
            input(arr, size_of_array);
    }

    if(choice == 2 )
    {   
        int length; 
        cout<<"Enter the lenght of hexadecimal you want ( 2 < hexadecimal length < 10) : ";
            cin>>length;

            for(int i = 0 ;i <size_of_array ; i++)
            {
                 arr[i] = generateRandomHexadecimal(length) ;

            }
    }

    cout << endl << "Given array: " << endl;
        print(arr, size_of_array);


int* count = new int[16];  
    
      for(int i = 0 ;i <= 16 ; i++)
        {
            count[i] = 0;
        }
   
    for(int  i = 0 ; i < size_of_array ; i++)
        {
            int base = base_calculation(arr[i]);
                count[base]++;
        }

cout<<endl;


    for(int i = 0 ; i <= 16 ; i++)
        {
             cout<<count[i] <<" ";
         }

cout<<endl;

    for(int i=0 ; i<=16; i++)
    {
        cout<<"Base "<<i<<": "<<count[i]<<endl;
    }

cout << endl;

    cout << "Graphical representation in star pattern : " << endl;

    int maxNumber = 0;
        for (int i = 1; i < 16; i++)
        {
            if (count[i] > maxNumber)
            {
                 maxNumber = count[i];   
            }
        }

    int i =1;
    int temp = 1;
        for(  ;i  <=16 ; i++)
          {  
            if( i <=9)
              cout<<" "<<i<<": ";
              else{
                cout<<i<<": ";
              }
           if( count[i] > 0)
           { 
                 for(int j = 0 ;j <count[i] ; j++)
                    {
                
                        cout<<"* ";
                        temp++;
                    }

          }

                    cout << endl;
 
          }

        
    
    delete[] arr;

    delete[] count;
    return 0;
}

bool is_input_hexadecimal(string str)
{
    for (int i = 0; i < str.length(); i++)
    {
        if (('0' <= str[i] && str[i] <= '9') || ('A' <= str[i] && str[i] <= 'F'))
        {
            return true;
        }
    }

    return false;
}

void input(string* arr, int size_of_array)
{
    for (int i = 0; i < size_of_array;)
    {
        cin >> arr[i];

        string str = arr[i];

        if (is_input_hexadecimal(arr[i]))
        {
            i++;
        }
        else
        {
            cout << "Enter a single hexadecimal digit between '0' to '9' and 'A' to 'F': ";
            cin.clear();
            cin.ignore(numeric_limits<streamsize>::max(), '\n');
        }
    }
}

void print(string* arr, int size_of_array)
{
    for (int i = 0; i < size_of_array; i++)
    {
        cout << arr[i] << " ";
    }
}
int base_calculation(string str)
{ 

    int base = 0 ;
   char last_char= 0 ; 
  int n = str.length();
  int last_integer[n] ;
  int right = n-1;

   while( !str.empty())
   {
       last_char = str.back(); 

 

         if ( last_char >= 'A' && last_char <= 'F')
        {
            last_integer[right--] = last_char - 'A' + 10;  

        }


       else if(last_char >= '0' && last_char<='9' )
      {
        last_integer[right--] = last_char - '0';
     }
       
         str.pop_back(); 
   }

   int max = INT_MIN ; 

   for( int  i = 0 ; i < n ; i++)
   {
       if(max < last_integer[i])
       {
        max = last_integer[i];       }
   }

   base = max;
    return (base+1); 
}

string generateRandomHexadecimal(int length) {

//Note : for this function I am taking help from some refernce and all other part code is tootally designed by me
    const string hexChars = "0123456789ABCDEF";
    string result;

    // Seed the random number generator with the current time
    srand(static_cast<unsigned int>(std::time(nullptr)));

    for (int i = 0; i < length; ++i) {
        result += hexChars[std::rand() % hexChars.length()];
    }

    return result;
}


